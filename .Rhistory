lon = coords_clinic[,2],
lat = coords_clinic[,1]
)
clinic_df <- mutate(clinic_df, type = "clinic", decay_rate = 0.6)
######### fast_food
fast_food <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="fast_food") %>%
osmdata_sf()
coords_fast_food <- st_coordinates(fast_food$osm_points)
fast_food_df <- data.frame(
lon = coords_fast_food[,2],
lat = coords_fast_food[,1]
)
fast_food_df <- mutate(fast_food_df, type = "fast_food", decay_rate = 0.4)
########## SHOP
supermarket <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "shop", value="supermarket") %>%
osmdata_sf()
coords_supermarket <- st_coordinates(supermarket$osm_points)
supermarket_df <- data.frame(
lon = coords_supermarket[,2],
lat = coords_supermarket[,1]
)
supermarket_df <- mutate(supermarket_df, type = "supermarket_df", decay_rate = 0.9)
###
final_data <- data.frame()
final_data <- bind_rows(restaurant_df,cinema_df,kindergarten_df,school_df,bank_df, food_court_df, supermarket_df,
clinic_df,cafe_df,fast_food_df)
final_data
write.csv(final_data, "WalkScore\\final_data_addition.csv", row.names=FALSE)
shiny::runApp()
runApp()
library(tidyverse)
library(osmdata)
library(ggplot2)
library(sf)
library(plotly)
library(dplyr)
available_features()
available_tags("highway")
available_tags("shop")
roads <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "highway", value = c("motorway", "primary", "secondary", "tertiary", "residential", "living_street")) %>%
osmdata_sf()
available_tags("amenity")
roads
restaurants <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value = c("restaurant")) %>%
osmdata_sf()
points <- restaurants$osm_points
coords <- st_coordinates(points)
restaurant_df <- data.frame(
lon = coords[,2],
lat = coords[,1]
)
restaurant_df <- mutate(restaurant_df,type="restaurant",decay_rate = 0.5)
head(restaurant_df)
cinemas <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="cinema") %>%
osmdata_sf()
coords_cinema <- st_coordinates(cinemas$osm_points)
cinema_df <- data.frame(
lon = coords_cinema[,2],
lat = coords_cinema[,1]
)
head(cinema_df)
cinema_df <- mutate(cinema_df, type="cinema", decay_rate = 0.3)
head(cinema_df)
kindergarten <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="kindergarten") %>%
osmdata_sf()
coords_kinder <- st_coordinates(kindergarten$osm_points)
kindergarten_df <- data.frame(
lon = coords_kinder[,2],
lat = coords_kinder[,1]
)
kindergarten_df <- mutate(kindergarten_df, type = "kindergarten", decay_rate = 0.6)
###
school <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="school") %>%
osmdata_sf()
coords_school <- st_coordinates(school$osm_points)
school_df <- data.frame(
lon = coords_school[,2],
lat = coords_school[,1]
)
school_df <- mutate(school_df, type = "school", decay_rate = 0.6)
bank <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="bank") %>%
osmdata_sf()
coords_bank <- st_coordinates(bank$osm_points)
bank_df <- data.frame(
lon = coords_bank[,2],
lat = coords_bank[,1]
)
bank_df <- mutate(bank_df, type = "bank", decay_rate = 0.49)
########################## ATANSION! NEW DATA BEING ADDED
food_court <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="food_court") %>%
osmdata_sf()
coords_food_court <- st_coordinates(food_court$osm_points)
food_court_df <- data.frame(
lon = coords_food_court[,2],
lat = coords_food_court[,1]
)
food_court_df <- mutate(food_court_df, type = "food court", decay_rate = 0.45)
############## CAFE
cafe <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="cafe") %>%
osmdata_sf()
coords_cafe <- st_coordinates(cafe$osm_points)
cafe_df <- data.frame(
lon = coords_cafe[,2],
lat = coords_cafe[,1]
)
cafe_df <- mutate(cafe_df, type = "cafe", decay_rate = 0.3)
########### CLINIC
clinic <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="clinic") %>%
osmdata_sf()
coords_clinic <- st_coordinates(clinic$osm_points)
clinic_df <- data.frame(
lon = coords_clinic[,2],
lat = coords_clinic[,1]
)
clinic_df <- mutate(clinic_df, type = "clinic", decay_rate = 0.6)
######### fast_food
fast_food <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="fast_food") %>%
osmdata_sf()
coords_fast_food <- st_coordinates(fast_food$osm_points)
fast_food_df <- data.frame(
lon = coords_fast_food[,2],
lat = coords_fast_food[,1]
)
fast_food_df <- mutate(fast_food_df, type = "fast food", decay_rate = 0.4)
########## SHOP
supermarket <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "shop", value="supermarket") %>%
osmdata_sf()
coords_supermarket <- st_coordinates(supermarket$osm_points)
supermarket_df <- data.frame(
lon = coords_supermarket[,2],
lat = coords_supermarket[,1]
)
supermarket_df <- mutate(supermarket_df, type = "supermarket", decay_rate = 0.9)
###
final_data <- data.frame()
final_data <- bind_rows(restaurant_df,cinema_df,kindergarten_df,school_df,bank_df, food_court_df, supermarket_df,
clinic_df,cafe_df,fast_food_df)
final_data
write.csv(final_data, "WalkScore\\final_data_addition.csv", row.names=FALSE)
runApp()
runApp()
runApp()
shiny::runApp()
library(tidyverse)
library(osmdata)
library(ggplot2)
library(sf)
library(plotly)
library(dplyr)
available_features()
available_tags("highway")
available_tags("shop")
roads <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "highway", value = c("motorway", "primary", "secondary", "tertiary", "residential", "living_street")) %>%
osmdata_sf()
available_tags("amenity")
roads
restaurants <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value = c("restaurant")) %>%
osmdata_sf()
points <- restaurants$osm_points
coords <- st_coordinates(points)
restaurant_df <- data.frame(
lon = coords[,2],
lat = coords[,1]
)
restaurant_df <- mutate(restaurant_df,type="restaurant",decay_rate = 0.5, coloring = "lemonchiffon1")
head(restaurant_df)
cinemas <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="cinema") %>%
osmdata_sf()
coords_cinema <- st_coordinates(cinemas$osm_points)
cinema_df <- data.frame(
lon = coords_cinema[,2],
lat = coords_cinema[,1]
)
head(cinema_df)
cinema_df <- mutate(cinema_df, type="cinema", decay_rate = 0.3, coloring = "springgreen")
head(cinema_df)
kindergarten <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="kindergarten") %>%
osmdata_sf()
coords_kinder <- st_coordinates(kindergarten$osm_points)
kindergarten_df <- data.frame(
lon = coords_kinder[,2],
lat = coords_kinder[,1]
)
kindergarten_df <- mutate(kindergarten_df, type = "kindergarten", decay_rate = 0.6, coloring = "moccasin")
###
school <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="school") %>%
osmdata_sf()
coords_school <- st_coordinates(school$osm_points)
school_df <- data.frame(
lon = coords_school[,2],
lat = coords_school[,1]
)
school_df <- mutate(school_df, type = "school", decay_rate = 0.6, coloring = "yellow")
bank <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="bank") %>%
osmdata_sf()
coords_bank <- st_coordinates(bank$osm_points)
bank_df <- data.frame(
lon = coords_bank[,2],
lat = coords_bank[,1]
)
bank_df <- mutate(bank_df, type = "bank", decay_rate = 0.49, coloring = "mintcream")
########################## ATANSION! NEW DATA BEING ADDED
food_court <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="food_court") %>%
osmdata_sf()
coords_food_court <- st_coordinates(food_court$osm_points)
food_court_df <- data.frame(
lon = coords_food_court[,2],
lat = coords_food_court[,1]
)
food_court_df <- mutate(food_court_df, type = "food court", decay_rate = 0.45, coloring = "seagreen")
############## CAFE
cafe <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="cafe") %>%
osmdata_sf()
coords_cafe <- st_coordinates(cafe$osm_points)
cafe_df <- data.frame(
lon = coords_cafe[,2],
lat = coords_cafe[,1]
)
cafe_df <- mutate(cafe_df, type = "cafe", decay_rate = 0.3, coloring = "tan2")
########### CLINIC
clinic <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="clinic") %>%
osmdata_sf()
coords_clinic <- st_coordinates(clinic$osm_points)
clinic_df <- data.frame(
lon = coords_clinic[,2],
lat = coords_clinic[,1]
)
clinic_df <- mutate(clinic_df, type = "clinic", decay_rate = 0.6, coloring = "red1")
######### fast_food
fast_food <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "amenity", value="fast_food") %>%
osmdata_sf()
coords_fast_food <- st_coordinates(fast_food$osm_points)
fast_food_df <- data.frame(
lon = coords_fast_food[,2],
lat = coords_fast_food[,1]
)
fast_food_df <- mutate(fast_food_df, type = "fast food", decay_rate = 0.4, coloring = "gold1")
########## SHOP
supermarket <- getbb("Yerevan") %>%
opq(timeout = 3500) %>%
add_osm_feature(key = "shop", value="supermarket") %>%
osmdata_sf()
coords_supermarket <- st_coordinates(supermarket$osm_points)
supermarket_df <- data.frame(
lon = coords_supermarket[,2],
lat = coords_supermarket[,1]
)
supermarket_df <- mutate(supermarket_df, type = "supermarket", decay_rate = 0.9, coloring = "magenta")
###
final_data <- data.frame()
final_data <- bind_rows(restaurant_df,cinema_df,kindergarten_df,school_df,bank_df, food_court_df, supermarket_df,
clinic_df,cafe_df,fast_food_df)
final_data
write.csv(final_data, "WalkScore\\final_data_addition.csv", row.names=FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
remotes::install_version("rsconnect", "0.8.29")
shiny::runApp()
shiny::runApp()
View(fast_food)
runApp()
runApp()
shiny::runApp()
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
final_data <- read.csv("final_data.csv")
library(dplyr)
final_data <- read.csv("WalkScore\\final_data_addition.csv")
# Keep every 20th element in the dataframe
mindal <- final_data %>%
slice(seq(1, n(), by = 180))
mindal
x <- mindal$lat
y <- mindal$lon
type <- mindal$decay_rate
# Function to calculate distance between two points
distance <- function(x1, y1, x2, y2) {
sqrt((x2 - x1)^2 + (y2 - y1)^2)
}
# Function to calculate transition probability based on distance with exponential decay
transition_prob <- function(dist,decay_factor)
{
#decay_factor <- 0.5  # Adjust this value to control the decay rate
prob <- exp(-decay_factor * dist)
return(prob)
}
# Create the transition matrix based on distance with exponential decay
n_points <- length(x)
transition_matrix <- matrix(0, nrow = n_points, ncol = n_points)
n_points
for (i in 1:n_points) {
for (j in 1:n_points) {
if (i != j) {
dist <- distance(x[i], y[i], x[j], y[j])
prob <- transition_prob(dist,type[i])
transition_matrix[i, j] <- prob
}
}
}
# Convert transition matrix to stochastic matrix (sum of each row equals 1)
transition_matrix <- transition_matrix / rowSums(transition_matrix)
transition_matrix
library(dplyr)
final_data <- read.csv("WalkScore\\final_data_addition.csv")
# Keep every 20th element in the dataframe
mindal <- final_data %>%
slice(seq(1, n(), by = 180))
mindal
x <- mindal$lat
y <- mindal$lon
type <- mindal$decay_rate
# Function to calculate distance between two points
distance <- function(x1, y1, x2, y2) {
sqrt((x2 - x1)^2 + (y2 - y1)^2)
}
# Function to calculate transition probability based on distance with exponential decay
transition_prob <- function(dist,decay_factor)
{
#decay_factor <- 0.5  # Adjust this value to control the decay rate
prob <- exp(-decay_factor * dist)
return(prob)
}
# Create the transition matrix based on distance with exponential decay
n_points <- length(x)
transition_matrix <- matrix(0, nrow = n_points, ncol = n_points)
n_points
for (i in 1:n_points) {
for (j in 1:n_points) {
if (i != j) {
dist <- distance(x[i], y[i], x[j], y[j])
prob <- transition_prob(dist,type[i])
transition_matrix[i, j] <- prob
}
}
}
# Convert transition matrix to stochastic matrix (sum of each row equals 1)
transition_matrix <- transition_matrix / rowSums(transition_matrix)
print(transition_matrix)
library(dplyr)
final_data <- read.csv("WalkScore\\final_data_addition.csv")
# Keep every 20th element in the dataframe
mindal <- final_data %>%
slice(seq(1, n(), by = 180))
mindal
x <- mindal$lat
y <- mindal$lon
type <- mindal$decay_rate
# Function to calculate distance between two points
distance <- function(x1, y1, x2, y2) {
sqrt((x2 - x1)^2 + (y2 - y1)^2)
}
# Function to calculate transition probability based on distance with exponential decay
transition_prob <- function(dist,decay_factor)
{
#decay_factor <- 0.5  # Adjust this value to control the decay rate
prob <- exp(-decay_factor * dist)
return(prob)
}
# Create the transition matrix based on distance with exponential decay
n_points <- length(x)
transition_matrix <- matrix(0, nrow = n_points, ncol = n_points)
n_points
for (i in 1:n_points) {
for (j in 1:n_points) {
if (i != j) {
dist <- distance(x[i], y[i], x[j], y[j])
prob <- transition_prob(dist,type[i])
transition_matrix[i, j] <- prob
}
}
}
# Convert transition matrix to stochastic matrix (sum of each row equals 1)
transition_matrix <- transition_matrix / rowSums(transition_matrix)
print(transition_matrix[1:34,1:34])
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
## Warning - getbb() may have some problems during year due to osmdata servers
yerevan_map <- get_map(getbb("Yerevan"), maptype = "terrain")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
getbb("Yerevan")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggmap)
ggmap(yerevan_map)+
geom_point(data = final_data, aes(lat,lon, fill = as.factor(type), stroke=0.001 )) +      labs(fill="")
ymin <- 44.39080 ## 44.36211
ymax <- 44.60057 #44.62177
xmin <- 40.10177  ##06585
xmax <- 40.23295 ##40.24177
yerevan_map <- get_map(location= c(lon = mean(c(ymin, ymax)), lat = mean(c(xmin,xmax))),
zoom =12, maptype="terrain", scale = 2)
yerevan_map <- get_map(location= c(lon = mean(c(ymin, ymax)), lat = mean(c(xmin,xmax))),
zoom =12, maptype="terrain", scale = 2)
ggmap(yerevan_map)+
geom_point(data = final_data, aes(lat,lon, fill = as.factor(type), stroke=0.001 )) +      labs(fill="")
final_data <- read.csv("WalkScore\\final_data_addition.csv")
# Keep every 20th element in the dataframe
mindal <- final_data %>%
slice(seq(1, n(), by = 180))
#mindal
x <- mindal$lat
y <- mindal$lon
type <- mindal$decay_rate
# Function to calculate distance between two points
distance <- function(x1, y1, x2, y2) {
sqrt((x2 - x1)^2 + (y2 - y1)^2)
}
# Function to calculate transition probability based on distance with exponential decay
transition_prob <- function(dist,decay_factor)
{
#decay_factor <- 0.5  # Adjust this value to control the decay rate
prob <- exp(-decay_factor * dist)
return(prob)
}
# Create the transition matrix based on distance with exponential decay
n_points <- length(x)
transition_matrix <- matrix(0, nrow = n_points, ncol = n_points)
#n_points
for (i in 1:n_points) {
for (j in 1:n_points) {
if (i != j) {
dist <- distance(x[i], y[i], x[j], y[j])
prob <- transition_prob(dist,type[i])
transition_matrix[i, j] <- prob
}
}
}
# Convert transition matrix to stochastic matrix (sum of each row equals 1)
transition_matrix <- transition_matrix / rowSums(transition_matrix)
ymin <- 44.39080 ## 44.36211
ymax <- 44.60057 #44.62177
xmin <- 40.10177  ##06585
xmax <- 40.23295 ##40.24177
yerevan_map <- get_map(location= c(lon = mean(c(ymin, ymax)), lat = mean(c(xmin,xmax))),
zoom =12, maptype="terrain", scale = 2)
ggmap(yerevan_map)+
geom_point(data = final_data, aes(lat,lon, fill = as.factor(type), stroke=0.001 )) +      labs(fill="")
ymin <- 44.39080 ## 44.36211
ymax <- 44.60057 #44.62177
xmin <- 40.10177  ##06585
xmax <- 40.23295 ##40.24177
yerevan_map <- get_map(location= c(lon = mean(c(ymin, ymax)), lat = mean(c(xmin,xmax))),
zoom =12, maptype="terrain", scale = 2)
ggmap(yerevan_map)+
geom_point(data = final_data, aes(lat,lon, color = as.factor(type), stroke=0.001 )) +      labs(fill="")
shiny::runApp()
